definitions:
  handlers.healthResponse:
    properties:
      status:
        type: string
      uptime:
        type: string
      version:
        type: string
    type: object
  models.CreateTaskRequest:
    properties:
      deadline_at:
        type: string
      description:
        type: string
      priority:
        type: integer
      title:
        type: string
    type: object
  models.GenricTaskResponse:
    properties:
      message:
        type: string
      taskid:
        type: integer
    type: object
  models.GetTasksResponse:
    properties:
      created_at:
        type: string
      deadline_at:
        type: string
      description:
        type: string
      priority:
        type: integer
      status:
        type: integer
      task_id:
        type: integer
      title:
        type: string
    type: object
  models.UpdateTaskRequest:
    properties:
      deadline_at:
        type: string
      description:
        type: string
      priority:
        type: integer
      status:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/health:
    get:
      description: Returns the server health status along with version and uptime
      produces:
      - application/json
      responses:
        "200":
          description: Server is healthy
          schema:
            $ref: '#/definitions/handlers.healthResponse'
        "500":
          description: Health check failed
          schema:
            type: string
      summary: Health check
      tags:
      - Health
  /v1/tasks:
    get:
      consumes:
      - application/json
      description: Fetch all tasks, optionally filtering by status and/or priority
      parameters:
      - description: Comma-separated task statuses to filter (1=pending, 2=wip, 3=done,
          4=archived)
        in: query
        name: status
        type: string
      - description: Comma-separated priority values to filter (1=high,2=medium,3=low,0=default(medium))
        in: query
        name: priority
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetTasksResponse'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Fetching tasks failed
          schema:
            type: string
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Create a new task with title, description, priority, and optional
        deadline
      parameters:
      - description: Task to create
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Task created successfully
          schema:
            $ref: '#/definitions/models.GenricTaskResponse'
        "400":
          description: Invalid JSON
          schema:
            type: string
        "422":
          description: Unprocessable entity (blank title)
          schema:
            type: string
        "500":
          description: Creating task failed
          schema:
            type: string
      summary: Create a new task
      tags:
      - Tasks
  /v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a task from the database using its unique ID. Returns 404
        if the task does not exist.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
          schema:
            $ref: '#/definitions/models.GenricTaskResponse'
        "400":
          description: Invalid or missing task ID
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a task by ID
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      description: Fetch a single task record from the database using its unique ID.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Task details fetched successfully
          schema:
            $ref: '#/definitions/models.GetTasksResponse'
        "400":
          description: Invalid or missing task ID
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get task details by ID
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      description: Partially update one or more fields of a task (title, description,
        status, priority, deadline).
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Fields to update
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Task updated successfully
          schema:
            $ref: '#/definitions/models.GenricTaskResponse'
        "400":
          description: Invalid input or missing ID
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update task fields by ID
      tags:
      - Tasks
swagger: "2.0"
